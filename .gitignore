1.844.931.20.38do
               {
                   
               }
               until ($x -gt 0)do
                               {
                                   
                               }
                               while ($x -gt 0)# Define a class
                                               class TypeName
                                               {
                                                  # Property with validate set
                                                  [ValidateSet("val1", "Val2")]
                                                  [string] $P1
                                               
                                                  # Static property
                                                  static [hashtable] $P2
                                               
                                                  # Hidden property does not show as result of Get-Member
                                                  hidden [int] $P3
                                               
                                                  # Constructor
                                                  TypeName ([string] $s)
                                                  {
                                                      $this.P1 = $s       
                                                  }
                                               
                                                  # Static method
                                                  static [void] MemberMethod1([hashtable] $h)
                                                  {
                                                      [TypeName]::P2 = $hif ($x -gt $y)
                                                                         {
                                                                             
                                                                         }
                                                  }tryparallel
                                                      {
                                                      
                                                      }
                                                   {
                                                       workflow Verb-Noun
                                                       {
                                                       <#
                                                       .Synopsis
                                                          Short description
                                                       .DESCRIPTION
                                                          Long description
                                                       .EXAMPLE
                                                          Example of how to use this workflow
                                                       .EXAMPLE
                                                          Another example of how to use this workflow
                                                       .INPUTS
                                                          Inputs to this workflow (if any)
                                                       .OUTPUTS
                                                          Output from this workflow (if any)
                                                       .NOTES
                                                          General notes
                                                       .FUNCTIONALITY
                                                          The functionality that best describes this workflow
                                                       #>
                                                       
                                                           [CmdletBinding(DefaultParameterSetName='Parameter Set 1',
                                                                         HelpUri = 'http://www.microsoft.com/',
                                                                         ConfirmImpact='Medium')]
                                                           [Alias()]
                                                           [OutputType([String])]
                                                           Param
                                                           (
                                                               # Param1 help description
                                                               [Parameter(Mandatory=$true, 
                                                                          Position=0,
                                                                          ParameterSetName='Parameter Set 1')]
                                                               [ValidateNotNull()]
                                                               [Alias("p1")] 
                                                               $Param1,
                                                       
                                                               # Param2 help description
                                                               [int]
                                                               $Param2
                                                           )
                                                       
                                                           # Saves (persists) the current workflow state and output
                                                           # Checkpoint-Workflow
                                                       
                                                           # Suspends the workflow
                                                           # Suspend-Workflow 
                                                       
                                                           # Workflow common parameters are available as variables such as:
                                                           $PSPersist 
                                                           $PSComputerName
                                                           $PSCredential
                                                           $PSUseSsl
                                                           $PSAuthentication
                                                       
                                                           # Workflow runtime information can be accessed by using the following variables:
                                                           $Input
                                                           $PSSenderInfo
                                                           $PSWorkflowRoot
                                                           $JobCommandName
                                                           $ParentCommandName
                                                           $JobId
                                                           $ParentJobId
                                                           $WorkflowInstanceId
                                                           $JobInstanceId
                                                           $ParentJobInstanceId
                                                           $JobName
                                                           $ParentJobName1.844.931.20.38
                                                       
                                                           # Set the progress message ParentActivityId
                                                           $PSParentActivityId1.844.931.20.38
                                                       
                                                           # Preference variables that control runforeach -parallel ($item in $collection)
                                                                                                  {
                                                                                                  
                                                                                                  }time behavior
                                                           $PSRunInProcessPreference
                                                           $PSPersistPreference
                                                       }
                                                   }
                                                   finally
                                                   {
                                                       
                                                   }
                                               
                                                  # Instance method<#
                                                                    # foreach ($item in $collection)
                                                                      {
                                                                          
                                                                      }
                                                                   #>
                                                                   
                                                  [int] MemberMethod2([int] $i)
                                                  {
                                                      $this.P3 = $ifor ($i = 1; $i -lt 99; $i++)
                                                                   { 
                                                                       
                                                                   }
                                                      return $this.P3
                                                  }
                                               }
